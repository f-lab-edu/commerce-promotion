version: "3.8"

services:
  # --- 개발(dev) 환경 서비스 ---
  backend-dev:
    build: ./backend
    container_name: promo_backend_dev
    env_file: .env.dev # dev 환경 변수 파일 사용
    environment:
      - SPRING_PROFILES_ACTIVE=dev # dev 프로필 활성화
    ports:
      - "8080:8080"
    depends_on:
      # - db-dev
      # - redis-dev
      db-dev:
        condition: service_healthy # db-dev가 healthy 상태가 될 때까지 기다립니다.
      redis-dev:
        condition: service_started
    restart: unless-stopped

  db-dev:
    image: mysql:8.0
    container_name: promo_mysql_dev
    env_file: .env.dev # dev 환경 변수 파일 사용
    ports:
      - "3307:3306"
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=Asia/Seoul
    volumes:
      - dev-db-data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./db/init.dev.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # 연결 가능 상태인지 확인
      interval: 10s
      timeout: 5s
      retries: 5

  redis-dev:
    image: redis:7.2-alpine
    container_name: promo_redis_dev
    env_file: .env.dev # dev 환경 변수 파일 사용
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped

  # --- 운영(prod) 환경 서비스 ---
  backend-prod:
    build: ./backend
    container_name: promo_backend_prod
    env_file: .env.prod # prod 환경 변수 파일 사용
    environment:
      - SPRING_PROFILES_ACTIVE=prod # prod 프로필 활성화
    ports:
      - "80:8080"
    depends_on:
      - db-prod
      - redis-prod
    restart: unless-stopped
  
  db-prod:
    image: mysql:8.0
    container_name: promo_mysql_prod
    env_file: .env.prod # prod 환경 변수 파일 사용
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=Asia/Seoul
    volumes:
      - prod-db-data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
    restart: unless-stopped

  redis-prod:
    image: redis:7.2-alpine
    container_name: promo_redis_prod
    env_file: .env.prod # prod 환경 변수 파일 사용
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped

volumes:
  dev-db-data:
  prod-db-data: