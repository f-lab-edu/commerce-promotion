spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASS}

  jpa:
    hibernate:
      ddl-auto: none # Flyway와 충돌 방지를 위해 'none'으로 변경
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

  flyway:
    locations: classpath:db/migration,classpath:db/migration/seed

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: coupon-group # Consumer 그룹 ID 지정
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*" # 모든 패키지의 DTO를 신뢰하도록 설정

jwt:
  secret: ${JWT_SECRET}
  accessTokenExpiration: 3600 # 1시간 (초)
  refreshTokenExpiration: 604800 # 7일 (초)

logging:
  file:
    name: logs/promo-dev.log
  level:
    org.springframework.web: WARN
    com.chae.promo: INFO
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql.BasicBinder: OFF

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,threaddump
  endpoint:
    health:
      show-details: always